---
import type { Tag } from "src/content/config";
import { SITE_IMAGE } from "../config";

export interface Props {
  title: string;
  description: string;
  image?: string;
  type?: string;
  tags?: Tag[];
  publishedTime?: string;
}

// Image has website default
const {
  title,
  type,
  tags,
  description,
  publishedTime,
  image = SITE_IMAGE,
} = Astro.props;
---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <!-- Global Metadata -->
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <meta name="generator" content={Astro.generator} />
  <!-- End Global Metadata -->

  <!-- Favicon -->
  <link rel="icon" type="image/x-icon" href="/favicon_io/favicon.ico" />
  <link
    rel="icon"
    type="image/png"
    href="/favicon_io/favicon.png"
    sizes="32x32"
  />
  <link
    rel="icon"
    type="image/png"
    href="/favicon_io/favicon-16x16.png"
    sizes="16x16"
  />
  <link
    rel="apple-touch-icon"
    type="image/png"
    href="/favicon_io/apple-touch-icon.png"
    sizes="180x180"
  />
  <link rel="manifest" href="/favicon_io/site.webmanifest" />

  <!-- Primary Meta Tags -->
  <title>{title}</title>
  <meta name="title" content={title} />
  <meta name="description" content={description} />
  <!-- End Primary Meta Tags -->

  <!-- Open Graph Essentials -->
  <meta property="og:type" content={type ?? "website"} />
  <meta property="og:url" content={Astro.url} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={new URL(image, Astro.url)} />
  <!-- End Open Graph Essentials -->

  <!-- Open Graph Optionals -->
  <meta property="og:locale" content="en_US" />
  <meta property="og:site_name" content="Max DeMaio's Music Website" />
  <!-- End Open Graph Optionals -->

  <!-- Article Specific Meta Tags -->
  {
    tags && (
      <>
        {tags.map((tag) => (
          <meta property="article:tag" content={tag} />
        ))}
      </>
    )
  }
  {
    publishedTime && (
      <meta property="article:published_time" content={publishedTime} />
    )
  }
  <!-- End Article Specific Meta Tags -->

  <!-- Music Specific Meta Tags -->
  <!-- End Music Specific Meta Tags -->

  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={Astro.url} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content={new URL(image, Astro.url)} />
  <!-- End Twitter -->
</head>
