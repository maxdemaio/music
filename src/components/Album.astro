<style>
  :root {
    --backdrop: hsl(0 0% 60% / 0.12);
    --radius: 20;
    --border: 1;
    --backup-border: var(--backdrop);
    --size: 200;
    --border-spot-opacity: 0.9;
    --border-light-opacity: 0.9;
    --cardblur: 4;
    --r: 0deg; /* Initial angle for button, firefox will be static */
  }

  .pulse-bg {
    backdrop-filter: blur(calc(var(--cardblur, 5) * 1px));
  }
  /**  Start card styles **/
  article:first-of-type {
    --base: 10;
    --spread: 10;
    --outer: 1;
  }
  article {
    border-radius: calc(var(--radius) * 1px);
    position: relative;
    box-shadow: 0 1rem 2rem -1rem black;
    display: inline-flex;
    backdrop-filter: blur(calc(var(--cardblur, 5) * 1px));
  }
  .my-img-border {
    border-radius: calc(var(--radius) * 1px);
  }

  /* Glow specific styles */
  [data-glow] {
    --border-size: calc(var(--border, 2) * 1px);
    --spotlight-size: calc(var(--size, 150) * 1px);
    --hue: calc(var(--base) + (var(--xp, 0) * var(--spread, 0)));
    background-image: radial-gradient(
      var(--spotlight-size) var(--spotlight-size) at calc(var(--x, 0) * 1px)
        calc(var(--y, 0) * 1px),
      hsl(
        var(--hue, 210) calc(var(--saturation, 100) * 1%)
          calc(var(--lightness, 70) * 1%) / var(--bg-spot-opacity, 0.1)
      ),
      transparent
    );
    background-size: calc(100% + (2 * var(--border-size)))
      calc(100% + (2 * var(--border-size)));
    background-position: 50% 50%;
    background-attachment: fixed;
    border: var(--border-size) solid var(--backup-border);
    position: relative;
    /* touch-action: none; */
  }

  [data-glow]::before,
  [data-glow]::after {
    pointer-events: none;
    content: "";
    position: absolute;
    inset: calc(var(--border-size) * -1);
    border: var(--border-size) solid transparent;
    border-radius: calc(var(--radius) * 1px);
    background-attachment: fixed;
    background-size: calc(100% + (2 * var(--border-size)))
      calc(100% + (2 * var(--border-size)));
    background-repeat: no-repeat;
    background-position: 50% 50%;
    mask: linear-gradient(transparent, transparent),
      linear-gradient(white, white);
    mask-clip: padding-box, border-box;
    mask-composite: intersect;
  }

  /* This is the emphasis light */
  [data-glow]::before {
    background-image: radial-gradient(
      calc(var(--spotlight-size) * 0.75) calc(var(--spotlight-size) * 0.75) at
        calc(var(--x, 0) * 1px) calc(var(--y, 0) * 1px),
      hsl(
        var(--hue, 210) calc(var(--saturation, 100) * 1%)
          calc(var(--lightness, 50) * 1%) / var(--border-spot-opacity, 1)
      ),
      transparent 100%
    );
    filter: brightness(2);
  }
  /* This is the spotlight */
  [data-glow]::after {
    background-image: radial-gradient(
      calc(var(--spotlight-size) * 0.5) calc(var(--spotlight-size) * 0.5) at
        calc(var(--x, 0) * 1px) calc(var(--y, 0) * 1px),
      hsl(0 100% 100% / var(--border-light-opacity, 1)),
      transparent 100%
    );
  }
  [data-glow] [data-glow] {
    position: absolute;
    inset: 0;
    will-change: filter;
    opacity: var(--outer, 1);
  }
  [data-glow] > [data-glow] {
    border-radius: calc(var(--radius) * 1px);
    border-width: calc(var(--border-size) * 20);
    filter: blur(calc(var(--border-size) * 10));
    background: none;
    pointer-events: none;
  }
  [data-glow] > [data-glow]::before {
    inset: -10px;
    border-width: 10px;
  }
  [data-glow] [data-glow] {
    border: none;
  }
  /** End card styles **/

  /** Start hero button styles **/
  .hero-button {
    border-radius: 5px;
  }
  .hero-button::after {
    pointer-events: none;
    content: "";
    z-index: -1;
    position: absolute;
    inset: 1px;
    background: conic-gradient(
      from var(--a),
      #414141 0%,
      white 12.5%,
      #414141 25%,
      #414141 50%,
      white 62.5%,
      #414141 75%
    );
    animation: animate 4s linear infinite;
    mask-image: url("/mask.svg");
    mask-size: cover;
    mask-position: center center;
    height: 60px;
    width: 240px;
  }

  @media (min-width: 770px) {
    .hero-button::after {
      pointer-events: none;
      content: "";
      z-index: -1;
      position: absolute;
      inset: 1px;
      background: conic-gradient(
        from var(--a),
        #414141 0%,
        white 12.5%,
        #414141 25%,
        #414141 50%,
        white 62.5%,
        #414141 75%
      );
      animation: animate 4s linear infinite;
      mask-image: url("/mask-md.svg");
      mask-size: cover;
      mask-position: center center;
      height: 70px;
      width: 350px;
    }
  }

  @property --a {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
  }

  @keyframes animate {
    0% {
      --a: 0deg;
    }
    100% {
      --a: 360deg;
    }
  }
  /** End hero button styles **/
</style>

<!--For overflowing content, make the outer most md:overflow-hidden 
and then make the card text have md:overflow-auto-->
<div>
  <article data-glow class="p-8 pr-0 md:pr-0">
    <span
      class="z-10 top-0 right-0 -mt-[0.35rem] -mr-[0.35rem] absolute flex h-4 w-4"
    >
      <span
        class="animate-ping absolute inline-flex h-full w-full rounded-full dark:bg-neutral-100 bg-neutral-300 opacity-60"
      ></span>
      <span
        class="relative inline-flex rounded-full h-4 w-4 dark:bg-neutral-200 bg-neutral-400"
      ></span>
    </span>
    <div data-glow></div>
    <div class="inline-flex flex-col md:flex-row justify-center pr-6 md:pr-0">
      <img
        src="/dj.jpeg"
        alt="dj album art"
        class="my-img-border object-cover w-[250px] h-[250px]"
      />
      <div
        class="md:overflow-auto pt-6 md:px-6 pl-0 pr-0 md:py-0 md:rounded-b-none gap-3 flex flex-col items-center md:w-[500px] md:h-[250px] w-[250px]"
      >
        <div class="text-center">
          <h3 class="font-semibold">dj - jim legxacy (cover)</h3>
        </div>
        <div class="flex flex-col gap-3 w-full justify-center items-center p-1">
          <a
            href="https://soundcloud.com/maxdemaio/dj-1"
            target="_blank"
            rel="noopener noreferrer"
            aria-label="SoundCloud"
            class="hero-button hover:scale-105 transition-all duration-300 md:h-[72px] md:w-[352px] w-[242px] h-[62px] isolate relative flex gap-2 items-center justify-center cursor-pointer"
          >
            <span class="i-mdi-soundcloud"></span>
            <span>SoundCloud</span>
          </a>
          <button
            class="md:h-[72px] md:w-[352px] w-[242px] h-[62px] border-black dark:border-white transition-all duration-300 hover:scale-105 gap-2 cursor-pointer flex items-center justify-center border-[1.5px] rounded-[5px]"
          >
            <span>Music Platform...</span>
          </button>
        </div>
      </div>
    </div>
  </article>
</div>

<script>
  const isNonMobile = () => {
    // Check if the user agent matches a common mobile device pattern
    const userAgent = navigator.userAgent.toLowerCase();
    const isMobile = /mobile|android|iphone|ipad|ipod|blackberry|iemobile|opera mini/.test(userAgent);

    // Additionally, you can check screen size if needed
    const screenWidth = window.innerWidth;
    const screenHeight = window.innerHeight;

    return !isMobile && screenWidth > 480 && screenHeight > 320;
  };

  if (isNonMobile()) {
    const syncPointer = (event: PointerEvent) => {
      const { clientX: x, clientY: y } = event;
      // x position
      document.documentElement.style.setProperty("--x", x.toFixed(2));

      // fraction of x position relative to window width
      document.documentElement.style.setProperty(
        "--xp",
        (x / window.innerWidth).toFixed(2)
      );

      // y position
      document.documentElement.style.setProperty("--y", y.toFixed(2));

      // fraction of y position relative to window height
      document.documentElement.style.setProperty(
        "--yp",
        (y / window.innerHeight).toFixed(2)
      );
    };

    document.body.addEventListener("pointermove", syncPointer);
  }
</script>

