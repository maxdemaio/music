<style>
  .navbar-blur {
    -webkit-backdrop-filter: blur(20px); /* Fixes blur for Safari */
    backdrop-filter: blur(20px);
  }
</style>


<nav
  class="mt-6 mb-7 py-4 top-0 w-full sticky z-50 navbar-blur gap-4 flex justify-between font-kai items-center lt-xs:px-4 px-8 max-w-3xl mx-auto"
>
  <a href="/" class="uppercase text-black dark:text-white font-bold text-xl">Max DeMaio</a>
  <!-- spacer -->
  <div></div>
  <div class="flex gap-6">
    <button class="transition-bg duration-200 ease-in-out z-50 text-base grid items-center justify-center">
      <div class="i-mdi-soundcloud"></div>
    </button>
    <button class="transition-bg duration-200 ease-in-out z-50 text-base grid items-center justify-center">
      <div class="i-mdi-instagram"></div>
    </button>
    <button class="transition-bg duration-200 ease-in-out z-50 text-base grid items-center justify-center">
      <div class="i-mdi-email"></div>
    </button>
    <button
      title="Theme"
      id="theme-button"
      class="transition-bg duration-200 ease-in-out z-50 text-base grid items-center justify-center"
    >
      <div class="i-tabler-sun-filled dark:i-tabler-moon-stars"></div>
    </button>
  </div>
 
</nav>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  })();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else {
    document.documentElement.classList.add('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle('dark');

    const isDark = element.classList.contains('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  };

  const themeButton = document.getElementById('theme-button');

  if (themeButton) {
    themeButton.addEventListener('click', handleToggleClick);
  }
</script>
