---
import Track from "@components/Track.astro";
import TrackGrid from "@components/TrackGrid.astro";
import BuildFailed from "@components/BuildFailed.astro";
import QuoteGrid from "@components/QuoteGrid.astro";

import Default from "@layouts/Default.astro";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { getTopTracks, type ETrack } from "src/util/spotify";
import Quote from "@components/Quote.astro";

export const prerender = false;

const today = new Date();

// For local development
// make sure you set env variables via CLI
let { items } = await getTopTracks();
let tracks: ETrack[] | null = null;

if (items) {
  // typed as any because Spotify API could change and will adjust as needed
  tracks = items.slice(0, 10).map((track: any) => ({
    artist: track.artists.map((_artist: any) => _artist.name).join(", "),
    songUrl: track.external_urls.spotify,
    title: track.name,
    // preserves the order of images: 640, 300, 64
    albumUrls: track.album.images.map((image: any) => image.url),
  }));
}

let blogPosts = await getCollection("blog", ({ data }) => {
  return data.draft !== true;
});
const totalBlogPosts = blogPosts.length;

// Sort my blog posts and only get the 3 most recent
blogPosts = blogPosts
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 3);

let music = await getCollection("music");

// Sort my music posts
music = music
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, 3);

// https://github.com/withastro/roadmap/discussions/181
// Cache this page for a day
// max age 1 day, re-validate every half day
Astro.response.headers.set(
  "Cache-Control",
  "public, s-maxage=86400, stale-while-revalidate=43200"
);
---

<style>
  /* https://stackoverflow.com/questions/32802202/how-to-center-a-flex-container-but-left-align-flex-items */
  .post-grid {
    grid-template-columns: repeat(auto-fit, minmax(15rem, max-content));
  }

  /* dynamic stylings unique for tags */
  .logic {
    /* sky-600 */
    color: rgb(2, 132, 199);
    border-color: rgb(2, 132, 199);
  }
  html.dark .logic {
    /* sky-300 */
    color: rgb(125 211 252);
    border-color: rgb(125 211 252);
  }
  .producing {
    color: rgb(192 38 211);
    border-color: rgb(192 38 211);
  }
  html.dark .producing {
    color: rgb(240 171 252);
    border-color: rgb(240 171 252);
  }

  .songwriting {
    color: rgb(217 119 6);
    border-color: rgb(217 119 6);
  }
  html.dark .songwriting {
    color: rgb(252 211 77);
    border-color: rgb(252 211 77);
  }

  .guitar {
    color: rgb(225 29 72);
    border-color: rgb(225 29 72);
  }
  html.dark .guitar {
    color: rgb(253 164 175);
    border-color: rgb(253 164 175);
  }
</style>

<Default
  title="Home - maymax music"
  description="maymax's personal music website"
>
  <div class="flex flex-wrap gap-10 lg:justify-between">
    <section>
      <h2
        class="mb-4 flex gap-2 uppercase text-black dark:text-white font-kai font-bold text-2xl"
      >
        Music
        <div class="flex">
          <span class="i-solar-microphone-2-line-duotone"></span>
          <span class="i-solar-music-notes-bold-duotone"></span>
        </div>
      </h2>
      <p class="mb-6 max-w-sm">
        My featured music as of late. Feel free to <a
          href="https://soundcloud.com/maymaxmusic"
          class="soundLink"
          >listen to all my music on SoundCloud{" "}<span
            class="i-solar-arrow-right-linear"></span></a
        >.
      </p>
      <ul class="flex flex-col gap-4">
        {
          music.map((song) => (
            <li class="flex gap-2 items-center">
              <div class="relative before:absolute before:left-0 before:rounded before:content-[''] before:w-full before:h-full before:bg-neutral-200 before:dark:bg-neutral-900 before:animate-pulse before:-z-1">
                <Image
                  src={song.data.image}
                  alt={song.data.imageAlt}
                  class="rounded object-cover w-[100px] h-[100px]"
                  quality="high"
                  loading="eager"
                />
              </div>

              <div class="flex flex-col gap-1">
                <div>
                  <a href={song.data.link} class="font-semibold soundLink">
                    <span class="i-solar:link-bold-duotone mr-1" />
                    {song.data.title}
                  </a>
                </div>
                <time datetime={song.data.date.toDateString()} class="text-sm">
                  {song.data.date.toLocaleDateString("en-us", {
                    year: "numeric",
                    month: "short",
                    day: "numeric",
                  })}
                </time>
                {today.getMonth() - song.data.date.getMonth() >= 0 &&
                  today.getFullYear() - song.data.date.getFullYear() == 0 &&
                  today.getMonth() - song.data.date.getMonth() < 2 && (
                    <div class="text-sm">
                      <span class="new">new!</span>
                    </div>
                  )}
              </div>
            </li>
          ))
        }
      </ul>
    </section>
    <section class="max-w-lg">
      <h2
        class="mb-4 uppercase text-black dark:text-white font-kai font-bold text-2xl"
      >
        STAY TUNED
      </h2>
      <p class="mb-6 max-w-sm">
        <span class="font-bold text-black dark:text-white">Stay Tuned</span> is a
        collection of all the useful music tips and tricks I've learned along the
        way. So far, I've written a total of {totalBlogPosts} posts. You can <a
          href="/blog"
          class="mlink"
          >Read all posts my posts here{" "}<span
            class="i-solar-arrow-right-linear"></span></a
        >.
      </p>

      <ul
        class="flex flex-wrap slide-enter-content1 gap-4 md:justify-start justify-center"
      >
        {
          blogPosts.map((post) => (
            <>
              <a
                href={`/blog/${post.slug}`}
                class="p-4 w-60 rounded group duration-400 transition-all shadow-md hover:translate-y-[-5px] bg-neutral-50 hover:shadow-xl dark:hover-shadow-none dark:bg-neutral-950 dark:border dark:border-neutral-800 dark:hover:border-neutral-600 dark:shadow-none"
              >
                <li>
                  <div class="line-clamp-2 transition-opacity duration-400 text-black dark:text-white opacity-60 group-hover:opacity-100">
                    {post.data.title}
                  </div>
                  <div class="transition-opacity duration-400 opacity-40 group-hover:opacity-80 flex flex-col gap-1">
                    <div class="flex gap-1">
                      <time datetime={post.data.pubDate.toDateString()}>
                        {post.data.pubDate.toLocaleDateString("en-us", {
                          year: "numeric",
                          month: "short",
                          day: "numeric",
                        })}
                      </time>
                      <span>Â·</span>
                      <span>{post.data.duration}min</span>
                    </div>
                    {post.data.tags && (
                      <div class="flex gap-1 flex-wrap">
                        {post.data.tags.sort().map((tag) => (
                          <span class={`${tag} border rounded px-1`}>
                            {tag}
                          </span>
                        ))}
                      </div>
                    )}
                  </div>
                </li>
              </a>
            </>
          ))
        }
      </ul>
    </section>
  </div>

  <section>
    <h2
      class="uppercase text-black dark:text-white font-kai font-bold text-2xl mb-4"
    >
      Lately
    </h2>
    <p class="mb-6">
      My 10 most played tracks on Spotify over the last 4 weeks, updated daily.
    </p>
    {
      tracks ? (
        <TrackGrid>
          {tracks.map((track: ETrack, index: number) => (
            <Track
              ranking={index + 1}
              songUrl={track.songUrl}
              artist={track.artist}
              title={track.title}
              albumUrls={track.albumUrls}
            />
          ))}
        </TrackGrid>
      ) : (
        <BuildFailed />
      )
    }
  </section>
  <section>
    <h2
      class="mb-4 uppercase text-black dark:text-white font-kai font-bold text-2xl"
    >
      Inspo
    </h2>
    <p class="mb-6">
      Compilation of snippets from poems and lyrics I enjoy. <a
        href="/inspo"
        class="mlink"
        >Check out all my inspo snippets here{" "}<span
          class="i-solar-arrow-right-linear"></span></a
      >.
    </p>
    <QuoteGrid>
      <Quote
        isSnippet
        authorAndSource="Sylvia Plath - Pursuit"
        link="https://allpoetry.com/Pursuit"
      >
        Now hills hatch menace, spawning shade;<br />
        Midnight cloaks the sultry grove;<br />
        The black marauder, hauled by love<br />
        On fluent haunches, keeps my speed.
      </Quote>
      <Quote isSnippet authorAndSource="Tracy K. Smith - Watershed">
        the rippling shallow water<br />the white ash trees shedding their
        leaves
      </Quote>

      <Quote
        isSnippet
        authorAndSource="Taha Muhammad Ali - Meeting at an Airport"
      >
        my blood rushing<br />like the shadow<br />cast by a cloud of starlings
      </Quote>
    </QuoteGrid>
  </section>
</Default>
