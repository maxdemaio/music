---
import Default from '@layouts/Default.astro';
import { getCollection } from 'astro:content';

const blogPosts = await getCollection('blog', ({ data }) => {
  return data.draft !== true;
});

// Sort my music posts
blogPosts.sort((a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf());
---

<style>
  /* dynamic stylings unique for tags */
  .logic {
    color: rgb(2, 132, 199);
    border-color: rgb(2, 132, 199);
  }
  html.dark .logic {
    /* sky-300 */
    color: rgb(125 211 252);
    border-color: rgb(125 211 252);
  }
  .producing {
    color: rgb(192 38 211);
    border-color: rgb(192 38 211);
  }
  html.dark .producing {
    color: rgb(240 171 252);
    border-color: rgb(240 171 252);
  }
</style>

<Default title="Home - Max DeMaio" description="Max DeMaio's personal website">
  <section class="mb-6">
    <h2 class="text-center uppercase text-black dark:text-white font-kai font-bold text-3xl mb-4">Lately</h2>
    <p class="mb-4 ">My most played tracks on Spotify over the last 4 weeks, updated daily.</p>
    <div class="flex flex-row items-baseline border-b border-neutral-200 dark:border-neutral-800 w-full mb-8">
      <p class="text-sm font-bold text-neutral-400 dark:text-neutral-600">
        1
      </p>
      <div class="flex flex-col pl-3">
        <a
          class="font-medium underline decoration-green-300 decoration-2 text-neutral-900 dark:text-neutral-100 truncate w-60 sm:w-96 md:w-full"
          href=""
          target="_blank"
          rel="noopener noreferrer"
        >
          title
        </a>
        <p
          class="text-neutral-500 mb-4 truncate w-60 sm:w-96 md:w-full"
          color="neutral.500"
        >
          artist
        </p>
      </div>
    </div>
  </section>
  <section class="mb-6">
    <h2 class="text-center uppercase text-black dark:text-white font-kai font-bold text-3xl mb-4">Stay Tuned</h2>
    <p class="">
      <span class="font-bold text-black dark:text-white">Stay Tuned</span> is a collection of all the useful music tips and
      tricks I've learned along the way. So far, I've written {blogPosts.length} post.
    </p>
  </section>
  <section class="mb-4 ">
    <ul class="space-y-4">
      {
        blogPosts.map((post) => (
          <>
            <li>
              <a href={`/blog/${post.slug}`} class="group ">
                <div class="transition-opacity ease-in-out duration-400 text-black dark:text-white opacity-60 group-hover:opacity-100">
                  {post.data.title}
                </div>
                <div class="transition-opacity ease-in-out duration-400 opacity-40 group-hover:opacity-80 flex flex-wrap gap-1">
                  <time datetime={post.data.pubDate}>
                    {new Date(post.data.pubDate).toLocaleDateString('en-us', {
                      year: 'numeric',
                      month: 'short',
                      day: 'numeric',
                    })}
                  </time>
                  <span>·</span>
                  <span>{post.data.duration}min</span>
                  {post.data.tags && <span>·</span>}
                  {post.data.tags && (
                    <>
                      {post.data.tags.map((tag) => (
                        <span class={`${tag} border rounded px-1`}>{tag}</span>
                      ))}
                    </>
                  )}
                </div>
              </a>
            </li>
          </>
        ))
      }
    </ul>
  </section>
</Default>
