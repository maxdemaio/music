---
export const prerender = false;

// For local development
// make sure you set them via CLI
const client_id = process.env.SPOTIFY_CLIENT_ID;
const client_secret = process.env.SPOTIFY_CLIENT_SECRET;
const refresh_token = process.env.SPOTIFY_REFRESH_TOKEN;

type ETrack = {
  ranking: number;
  songUrl: string;
  artist: string;
  title: string;
  albumUrls: string[];
};

const basic = Buffer.from(`${client_id}:${client_secret}`).toString("base64");
const TOKEN_ENDPOINT = `https://accounts.spotify.com/api/token`;

// Top 10 tracks over 4 week period
// https://developer.spotify.com/documentation/web-api/reference/#/operations/get-users-top-artists-and-tracks
const TOP_TRACKS_ENDPOINT = `https://api.spotify.com/v1/me/top/tracks?time_range=short_term&limit=10`;

const getAccessToken = async () => {
  const response = await fetch(TOKEN_ENDPOINT, {
    method: "POST",
    headers: {
      Authorization: `Basic ${basic}`,
      "Content-Type": "application/x-www-form-urlencoded",
    },
    body: new URLSearchParams({
      grant_type: "refresh_token",
      refresh_token: refresh_token || "",
    }),
  });
  return await response.json();
};

const getTopTracks = async () => {
  const { access_token } = await getAccessToken();
  const url = TOP_TRACKS_ENDPOINT;
  const payload = {
    method: "GET",
    headers: {
      Authorization: `Bearer ${access_token}`,
    },
  };
  const res = await fetch(url, payload);

  const data = await res.json();
  return data;
};

let { items } = await getTopTracks();

let tracks: ETrack[] | null = null;

if (items) {
  // typed as any because Spotify API could change and will adjust as needed
  tracks = items.slice(0, 10).map((track: any) => ({
    artist: track.artists.map((_artist: any) => _artist.name).join(", "),
    songUrl: track.external_urls.spotify,
    title: track.name,
    // preserves the order of images: 640, 300, 64
    albumUrls: track.album.images.map((image: any) => image.url),
  }));
}

import Track from "@components/Track.astro";

import Default from "@layouts/Default.astro";
import { getCollection } from "astro:content";

let blogPosts = await getCollection("blog", ({ data }) => {
  return data.draft !== true;
});

const totalBlogPosts = blogPosts.length;

// Sort my music posts and only get the 3 most recent
blogPosts = blogPosts
  .sort(
    (a, b) =>
      new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
  )
  .slice(0, 3);

// https://github.com/withastro/roadmap/discussions/181
// Cache this page for a day
// max age 1 day, re-validate every half day
Astro.response.headers.set(
  "Cache-Control",
  "public, s-maxage=86400, stale-while-revalidate=43200"
);
---

<style>
  /* https://stackoverflow.com/questions/32802202/how-to-center-a-flex-container-but-left-align-flex-items */
  .post-grid {
    grid-template-columns: repeat(auto-fit, minmax(15rem, max-content));
  }

  /* dynamic stylings unique for tags */
  .logic {
    /* sky-600 */
    color: rgb(2, 132, 199);
    border-color: rgb(2, 132, 199);
  }
  html.dark .logic {
    /* sky-300 */
    color: rgb(125 211 252);
    border-color: rgb(125 211 252);
  }
  .producing {
    color: rgb(192 38 211);
    border-color: rgb(192 38 211);
  }
  html.dark .producing {
    color: rgb(240 171 252);
    border-color: rgb(240 171 252);
  }

  .songwriting {
    color: rgb(217 119 6);
    border-color: rgb(217 119 6);
  }
  html.dark .songwriting {
    color: rgb(252 211 77);
    border-color: rgb(252 211 77);
  }
</style>

<Default
  title="Home - Max DeMaio Music"
  description="Max DeMaio's personal music website"
>
  <section class="mt-8 mb-10">
    <div
      class="flex flex-wrap gap-2 dark:text-sky-300 text-sky-600 animate-pulse text-xl justify-center items-center"
    >
      <p class="text-center">Currently in the process of writing and self-producing two tracks...</p>
      <div class="flex">
        <span class="i-solar-microphone-2-line-duotone"></span>
        <span class="i-solar-music-notes-bold-duotone"></span>
      </div>
    </div>
  </section>
  <section class="mb-10">
    <div class="flex justify-between mb-4 items-center">
      <h2
        class="uppercase text-black dark:text-white font-kai font-bold text-2xl"
      >
        Stay Tuned
      </h2>
      <div>
        <a href="/blog" class="mlink"
          >See all posts{" "}<span class="i-solar-arrow-right-linear"></span></a
        >
      </div>
    </div>
    <p class="mb-6">
      <span class="font-bold text-black dark:text-white">Stay Tuned</span> is a collection
      of all the useful music tips and tricks I've learned along the way. So far,
      I've written a total of {totalBlogPosts} posts.
    </p>

    <ul class="grid post-grid gap-4 justify-center">
      {
        blogPosts.map((post) => (
          <>
            <a
              href={`/blog/${post.slug}`}
              class="p-4 w-60 rounded group duration-400 ease-in-out shadow-md hover:translate-y-[-5px] bg-neutral-50 hover:shadow-xl dark:hover-shadow-none dark:bg-neutral-950 dark:border dark:border-neutral-800 dark:hover:border-neutral-600 dark:shadow-none"
            >
              <li>
                <div class="transition-opacity ease-in-out duration-400 text-black dark:text-white opacity-60 group-hover:opacity-100">
                  {post.data.title}
                </div>
                <div class="transition-opacity ease-in-out duration-400 opacity-40 group-hover:opacity-80 flex flex-col gap-1">
                  <div class="flex gap-1">
                    <time datetime={post.data.pubDate}>
                      {new Date(post.data.pubDate).toLocaleDateString("en-us", {
                        year: "numeric",
                        month: "short",
                        day: "numeric",
                      })}
                    </time>
                    <span>Â·</span>
                    <span>{post.data.duration}min</span>
                  </div>

                  {post.data.tags && (
                    <div class="flex gap-1 flex-wrap">
                      {post.data.tags.map((tag) => (
                        <span class={`${tag} border rounded px-1`}>{tag}</span>
                      ))}
                    </div>
                  )}
                </div>
              </li>
            </a>
          </>
        ))
      }
    </ul>
  </section>

  <section class="mb-6">
    <h2
      class="uppercase text-black dark:text-white font-kai font-bold text-2xl mb-4"
    >
      Lately
    </h2>
    <p class="mb-6">
      My 10 most played tracks on Spotify over the last 4 weeks, updated daily.
    </p>
    <div class="grid md:grid-cols-2 grid-cols-1 gap-2 mb-10">
      {
        tracks ? (
          <>
            {tracks.map((track: ETrack, index: number) => (
              <Track
                ranking={index + 1}
                songUrl={track.songUrl}
                artist={track.artist}
                title={track.title}
                albumUrls={track.albumUrls}
              />
            ))}
          </>
        ) : (
          <div class="text-red-600 dark:text-red-200 flex opacity-60 items-center gap-2">
            <svg
              class="w-6 h-6"
              viewBox="0 0 1024 1024"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <circle cx="512" cy="512" r="489.952" fill="currentColor" />
              <rect
                x="281.722"
                y="359.673"
                width="110.239"
                height="538.947"
                rx="55.1196"
                transform="rotate(-45 281.722 359.673)"
                fill="#6B0000"
              />
              <rect
                x="662.816"
                y="281.722"
                width="110.239"
                height="538.947"
                rx="55.1196"
                transform="rotate(45 662.816 281.722)"
                fill="black"
              />
            </svg>
            <p>Sorry, couldn't load tracks from the Spotify API </p>
            <svg
              class="w-6 h-6"
              viewBox="0 0 1024 1024"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <circle cx="512" cy="512" r="489.952" fill="currentColor" />
              <rect
                x="281.722"
                y="359.673"
                width="110.239"
                height="538.947"
                rx="55.1196"
                transform="rotate(-45 281.722 359.673)"
                fill="#6B0000"
              />
              <rect
                x="662.816"
                y="281.722"
                width="110.239"
                height="538.947"
                rx="55.1196"
                transform="rotate(45 662.816 281.722)"
                fill="black"
              />
            </svg>
          </div>
        )
      }
    </div>
  </section>
</Default>
